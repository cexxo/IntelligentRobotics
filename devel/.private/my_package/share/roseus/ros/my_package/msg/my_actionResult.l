;; Auto-generated. Do not edit!


(when (boundp 'my_package::my_actionResult)
  (if (not (find-package "MY_PACKAGE"))
    (make-package "MY_PACKAGE"))
  (shadow 'my_actionResult (find-package "MY_PACKAGE")))
(unless (find-package "MY_PACKAGE::MY_ACTIONRESULT")
  (make-package "MY_PACKAGE::MY_ACTIONRESULT"))

(in-package "ROS")
;;//! \htmlinclude my_actionResult.msg.html
(if (not (find-package "STD_MSGS"))
  (ros::roseus-add-msgs "std_msgs"))


(defclass my_package::my_actionResult
  :super ros::object
  :slots (_result_header _goal_reached ))

(defmethod my_package::my_actionResult
  (:init
   (&key
    ((:result_header __result_header) (instance std_msgs::Header :init))
    ((:goal_reached __goal_reached) nil)
    )
   (send-super :init)
   (setq _result_header __result_header)
   (setq _goal_reached __goal_reached)
   self)
  (:result_header
   (&rest __result_header)
   (if (keywordp (car __result_header))
       (send* _result_header __result_header)
     (progn
       (if __result_header (setq _result_header (car __result_header)))
       _result_header)))
  (:goal_reached
   (&optional (__goal_reached :null))
   (if (not (eq __goal_reached :null)) (setq _goal_reached __goal_reached)) _goal_reached)
  (:serialization-length
   ()
   (+
    ;; std_msgs/Header _result_header
    (send _result_header :serialization-length)
    ;; bool _goal_reached
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; std_msgs/Header _result_header
       (send _result_header :serialize s)
     ;; bool _goal_reached
       (if _goal_reached (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; std_msgs/Header _result_header
     (send _result_header :deserialize buf ptr-) (incf ptr- (send _result_header :serialization-length))
   ;; bool _goal_reached
     (setq _goal_reached (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get my_package::my_actionResult :md5sum-) "16b66d62c836ef7c10106a7a2ba9ddcc")
(setf (get my_package::my_actionResult :datatype-) "my_package/my_actionResult")
(setf (get my_package::my_actionResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result definition
std_msgs/Header result_header
bool goal_reached

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

")



(provide :my_package/my_actionResult "16b66d62c836ef7c10106a7a2ba9ddcc")


